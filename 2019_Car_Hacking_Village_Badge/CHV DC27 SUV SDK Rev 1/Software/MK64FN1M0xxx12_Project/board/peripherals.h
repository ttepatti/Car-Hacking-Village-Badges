/***********************************************************************************************************************
 * This file was generated by the MCUXpresso Config Tools. Any manual edits made to this file
 * will be overwritten if the respective MCUXpresso Config Tools is used to update this file.
 **********************************************************************************************************************/

#ifndef _PERIPHERALS_H_
#define _PERIPHERALS_H_

/***********************************************************************************************************************
 * Included files
 **********************************************************************************************************************/
#include "fsl_common.h"
#include "fsl_gpio.h"
#include "fsl_port.h"
#include "fsl_adc16.h"
#include "fsl_uart.h"
#include "fsl_uart_freertos.h"
#include "fsl_clock.h"
#include "fsl_flexcan.h"
#include "fsl_i2c.h"
#include "fsl_i2c_freertos.h"
#include "usb_device_composite.h"

#if defined(__cplusplus)
extern "C" {
#endif /* __cplusplus */

/***********************************************************************************************************************
 * Definitions
 **********************************************************************************************************************/
/* Definitions for BOARD_InitPeripherals functional group */
/* Alias for GPIOA peripheral */
#define GPIO_1_GPIO GPIOA
/* Alias for ADC0 peripheral */
#define ADC16_1_PERIPHERAL ADC0
/* ADC16_1 interrupt vector ID (number). */
#define ADC16_1_IRQN ADC0_IRQn
/* ADC16_1 interrupt handler identifier. */
#define ADC16_1_IRQHANDLER ADC0_IRQHandler
/* Definition of peripheral ID */
#define UART_1_PERIPHERAL UART0
/* Definition of the clock source frequency */
#define UART_1_CLOCK_SOURCE CLOCK_GetFreq(UART0_CLK_SRC)
/* Definition of the backround buffer size */
#define UART_1_BACKGROUND_BUFFER_SIZE 256
/* Definition of peripheral ID */
#define FLEXCAN_1_PERIPHERAL CAN0
/* Definition of the clock source frequency */
#define FLEXCAN_1_CLOCK_SOURCE 60000000UL
/* BOARD_InitPeripherals defines for I2C1 */
/* Definition of peripheral ID */
#define I2C_1_PERIPHERAL I2C1
/* Definition of the clock source */
#define I2C_1_CLOCK_SOURCE I2C1_CLK_SRC
/* Definition of the clock source frequency */
#define I2C_1_CLK_FREQ CLOCK_GetFreq(I2C_1_CLOCK_SOURCE)
/* Alias for GPIOB peripheral */
#define GPIO_2_GPIO GPIOB

/***********************************************************************************************************************
 * Global variables
 **********************************************************************************************************************/
extern adc16_channel_config_t ADC16_1_channelsConfig[4];
extern const adc16_config_t ADC16_1_config;
extern const adc16_channel_mux_mode_t ADC16_1_muxMode;
extern const adc16_hardware_average_mode_t ADC16_1_hardwareAverageMode;
extern uart_rtos_handle_t UART_1_rtos_handle;
extern uart_handle_t UART_1_uart_handle;
extern uart_rtos_config_t UART_1_rtos_config;
extern const flexcan_config_t FlexCAN_1_config;
/* Message buffer 0 configuration structure */
extern const flexcan_rx_mb_config_t FlexCAN_1_rx_mb_config_0;
extern flexcan_rx_fifo_config_t FlexCAN_1_rx_fifo_config;
extern i2c_rtos_handle_t I2C_1_rtosHandle;
extern const i2c_master_config_t I2C_1_config;

/***********************************************************************************************************************
 * Initialization functions
 **********************************************************************************************************************/
void BOARD_InitPeripherals(void);

/***********************************************************************************************************************
 * BOARD_InitBootPeripherals function
 **********************************************************************************************************************/
void BOARD_InitBootPeripherals(void);

#if defined(__cplusplus)
}
#endif

#endif /* _PERIPHERALS_H_ */
